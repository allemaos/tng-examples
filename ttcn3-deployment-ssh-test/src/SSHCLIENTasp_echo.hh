// This C++ header file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/6 R4A
// for tango (tango@tango-VirtualBox) on Fri Jul 20 16:40:36 2018

// Copyright (c) 2000-2018 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

#ifndef SSHCLIENTasp__echo_HH
#define SSHCLIENTasp__echo_HH

#ifdef TITAN_RUNTIME_2
#error Generated code does not match with used runtime.\
 Code was generated without -R option but -DTITAN_RUNTIME_2 was used.
#endif

/* Header file includes */

#include <TTCN3.hh>
#include "SSHCLIENTasp_PortType.hh"

#if TTCN3_VERSION != 60400
#error Version mismatch detected.\
 Please check the version of the TTCN-3 compiler and the base library.\
 Run make clean and rebuild the project if the version of the compiler changed recently.
#endif

#ifndef LINUX
#error This file should be compiled on LINUX
#endif

namespace SSHCLIENTasp__echo {

/* Type definitions */

typedef COMPONENT SSH__CT;
typedef COMPONENT_template SSH__CT_template;

/* Function prototypes */

extern SSHCLIENTasp__Types::ASP__SSH__SetRegexPrompt_template t__regexPrompt(const CHARSTRING& rp);
extern CHARSTRING_template t__Pattern(const CHARSTRING& vl__pattern);
extern alt_status as__status_instance();
extern void as__status();
extern Default_Base *activate_as__status();
extern alt_status as__prompt_instance();
extern void as__prompt();
extern Default_Base *activate_as__prompt();
extern alt_status as__conversation__error_instance();
extern void as__conversation__error();
extern Default_Base *activate_as__conversation__error();
extern alt_status as__T__SSHresp__timeout_instance();
extern void as__T__SSHresp__timeout();
extern Default_Base *activate_as__T__SSHresp__timeout();
extern alt_status as__regular__msg__rec_instance();
extern void as__regular__msg__rec();
extern Default_Base *activate_as__regular__msg__rec();
extern verdicttype testcase_tc1(boolean has_timer, double timer_value);
extern void f__send__command(const CHARSTRING& vl__cmd, const CHARSTRING& vl__pattern, const VERDICTTYPE& vl__verdict);
extern void start_f__send__command(const COMPONENT& component_reference, const CHARSTRING& vl__cmd, const CHARSTRING& vl__pattern, const VERDICTTYPE& vl__verdict);

/* Global variable declarations */

extern const CHARSTRING& usrname;
extern const CHARSTRING& pwd;
extern const CHARSTRING& nodeIPAddr;
extern const SSHCLIENTasp__Types::ASP__SSH__SetUserID_template& t__userId;
extern const SSHCLIENTasp__Types::ASP__SSH__Close_template& t__close;
extern const SSHCLIENTasp__Types::ASP__SSH__Connect_template& t__connect;
extern const SSHCLIENTasp__Types::ASP__SSH__Status_template& t__status;
extern const SSHCLIENTasp__Types::ASP__SSH__Status_template& t__status__ok;
extern const SSHCLIENTasp__Types::ASP__SSH__PseudoPrompt_template& t__pseudoPrompt;
extern const SSHCLIENTasp__Types::ASP__SSH__SetRemotePort_template& t__remotePort;
extern const SSHCLIENTasp__Types::ASP__SSH__SetAdditionalParameters_template& t__parameters;
extern const CHARSTRING_template& t__ASP__SSH;
extern const TTCN_Typedescriptor_t& SSH__CT_descr_;
extern SSHCLIENTasp__PortType::SSHCLIENTasp__PT SSH__CT_component_SSH__PCO;
extern TIMER SSH__CT_component_T__sshResp;
extern CHARSTRING SSH__CT_component_sshRespStr;
extern TTCN_Module module_object;

} /* end of namespace */

#endif
